{"version":3,"file":"scribe-plugin-smart-lists.js","mappingssources":["../src/plugins/scribe-plugin-smart-lists.js"],"sourcesContent":["define('scribe-plugin-smart-lists',[],function () {\n\n  'use strict';\n\n  return function () {\n\n    var keys = {\n      32: 'Space',\n      42: '*',\n      45: '-',\n      46: '.',\n      49: '1',\n      // Bullet insertion keycode, most likely only working on OS X...\n      8226:  '•'\n    };\n\n    function isUnorderedListChar(string) {\n      return string === '*' || string === '-' || string === '•';\n    }\n\n    function findBlockContainer(node) {\n      while (node && ! isBlockElement(node)) {\n        node = node.parentNode;\n      }\n\n      return node;\n    }\n\n    function isBlockElement(node) {\n      return (\n        node.tagName === 'P' ||\n        node.tagName === 'LI' ||\n        node.tagName === 'DIV'\n        // TODO: etc\n      );\n    }\n\n\n    return function (scribe) {\n\n      var preLastChar, lastChar, currentChar;\n\n      function removeSelectedTextNode() {\n        var selection = new scribe.api.Selection();\n        var container = selection.range.commonAncestorContainer;\n        if (container.nodeType === Node.TEXT_NODE) {\n          container.parentNode.removeChild(container);\n        } else {\n          throw new Error('Cannot empty non-text node!');\n        }\n      }\n\n      function input(event) {\n        var listCommand;\n\n        preLastChar = lastChar;\n        lastChar = currentChar;\n        // FIXME: Chrome / FF, theoretically we should be using event.key?\n        //        can we abstract this madness?\n        currentChar = keys[event.charCode];\n\n        var selection = new scribe.api.Selection();\n\n        // TODO: if a <p> with just this content\n        var container = selection.range.commonAncestorContainer;\n\n        // If in a <p>\n        var blockContainer = findBlockContainer(container);\n        if (blockContainer && blockContainer.tagName === 'P') {\n          var startOfLineIsUList = isUnorderedListChar(container.textContent[0]);\n          if (isUnorderedListChar(lastChar) && currentChar === 'Space' && startOfLineIsUList) {\n            listCommand = 'insertUnorderedList';\n          }\n\n          var startOfLineIsOList = container.textContent === '1.';\n          if (preLastChar === '1' && lastChar === '.' && currentChar === 'Space' && startOfLineIsOList) {\n            listCommand = 'insertOrderedList';\n          }\n        }\n\n        if (listCommand) {\n          // Ignore the typed character\n          event.preventDefault();\n\n          scribe.transactionManager.run(function() {\n            scribe.getCommand(listCommand).execute();\n\n            // Clear \"* \"/etc from the list item\n            removeSelectedTextNode();\n          });\n        }\n      }\n\n      scribe.el.addEventListener('keypress', input);\n    };\n  };\n\n});\n\n"],"names":[]}